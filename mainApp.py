from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QObject, pyqtSlot
from UI_SP import Ui_MainWindow
import sys

class MainWindowUIClass(Ui_MainWindow):
    def __init__( self ):
        '''Initialize the super class
        '''
        super().__init__()
    
    def setupUi( self, MW ):
        ''' Setup the UI of the super class, and add here code
        that relates to the way we want our UI to operate.
        '''
        super().setupUi( MW )

        # close the lower part of the splitter to hide the 
        # debug window under normal operations
        #self.splitter.setSizes([300, 0])
    
    def debugPrint( self, msg ):
        self.txtResultadoArchivo.append(msg)
    
    def returnPressedSlot( self ):
        ''' Called when the user enters a string in the line edit and
        presses the ENTER key.
        '''
        self.debugPrint( "RETURN key pressed in LineEdit widget" )
    
    def writeDocSlot( self ):
        ''' Called when the user presses the Write-Doc button.
        '''
        self.debugPrint( "Write-Doc button pressed" )

    # slot
    def browseSlot( self ):
        ''' Called when the user presses the Browse button
        '''
        self.debugPrint( "Browse button pressed" )


def main():
    """
    This is the MAIN ENTRY POINT of our application.  The code at the end
    of the mainwindow.py script will not be executed, since this script is now
    our main program.   We have simply copied the code from mainwindow.py here
    since it was automatically generated by '''pyuic5'''.

    """
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = MainWindowUIClass()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

main()